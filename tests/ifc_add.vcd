$date
	Tue Feb 21 00:39:49 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ifc_test $end
$var wire 1 ! RST_N $end
$var wire 8 " cfg_address [7:0] $end
$var wire 32 # cfg_data_in [31:0] $end
$var wire 1 $ cfg_en $end
$var wire 1 % cfg_op $end
$var wire 1 & cfg_rdy $end
$var wire 1 ' din_en $end
$var wire 8 ( din_value [7:0] $end
$var wire 1 ) dout_en $end
$var wire 1 * len_en $end
$var wire 1 + len_rdy $end
$var wire 8 , len_value [7:0] $end
$var wire 8 - dout_value [7:0] $end
$var wire 1 . dout_rdy $end
$var wire 1 / din_rdy $end
$var wire 32 0 cfg_data_out [31:0] $end
$var reg 1 1 CLK $end
$scope module dut $end
$var wire 1 1 CLK $end
$var wire 1 2 \MUX_programmed_length$write_1__SEL_1 $end
$var wire 1 ! RST_N $end
$var wire 1 3 \busy$EN $end
$var wire 8 4 cfg_address [7:0] $end
$var wire 32 5 cfg_data_in [31:0] $end
$var wire 1 $ cfg_en $end
$var wire 1 % cfg_op $end
$var wire 1 & cfg_rdy $end
$var wire 8 6 \current_count$D_IN [7:0] $end
$var wire 1 7 \current_count$EN $end
$var wire 1 ' din_en $end
$var wire 1 / din_rdy $end
$var wire 8 8 din_value [7:0] $end
$var wire 1 ) dout_en $end
$var wire 1 9 \dout_ff$CLR $end
$var wire 1 : \dout_ff$DEQ $end
$var wire 1 ; \dout_ff$ENQ $end
$var wire 1 . dout_rdy $end
$var wire 8 < dout_value [7:0] $end
$var wire 1 * len_en $end
$var wire 1 + len_rdy $end
$var wire 8 = len_value [7:0] $end
$var wire 1 > \pause$EN $end
$var wire 1 ? \programmed_length$EN $end
$var wire 1 @ \sum$EN $end
$var wire 1 A \sw_override$EN $end
$var wire 1 B \w_sw_override$whas $end
$var wire 17 C x__h969 [16:0] $end
$var wire 1 D \sw_override$D_IN $end
$var wire 8 E \sum$D_IN [7:0] $end
$var wire 8 F \programmed_length$D_IN [7:0] $end
$var wire 1 G \pause$D_IN $end
$var wire 8 H next_count__h523 [7:0] $end
$var wire 1 I \dout_ff$FULL_N $end
$var wire 1 J \dout_ff$EMPTY_N $end
$var wire 8 K \dout_ff$D_OUT [7:0] $end
$var wire 8 L \dout_ff$D_IN [7:0] $end
$var wire 1 M current_count_PLUS_1_EQ_programmed_length___d8 $end
$var wire 32 N cfg_data_out [31:0] $end
$var wire 1 O \busy$D_IN $end
$var reg 32 P CASE_cfg_address_0_0_CONCAT_x69_4_0_CONCAT_sw__ETC__q1 [31:0] $end
$var reg 1 Q busy $end
$var reg 8 R current_count [7:0] $end
$var reg 1 S pause $end
$var reg 8 T programmed_length [7:0] $end
$var reg 8 U sum [7:0] $end
$var reg 1 V sw_override $end
$scope module dout_ff $end
$var wire 1 1 CLK $end
$var wire 1 9 CLR $end
$var wire 1 : DEQ $end
$var wire 8 W D_IN [7:0] $end
$var wire 1 J EMPTY_N $end
$var wire 1 ; ENQ $end
$var wire 1 I FULL_N $end
$var wire 1 ! RST $end
$var wire 1 X d0d1 $end
$var wire 1 Y d0di $end
$var wire 1 Z d0h $end
$var wire 1 [ d1di $end
$var wire 8 \ D_OUT [7:0] $end
$var reg 8 ] data0_reg [7:0] $end
$var reg 8 ^ data1_reg [7:0] $end
$var reg 1 _ empty_reg $end
$var reg 1 ` full_reg $end
$scope begin error_checks $end
$var reg 1 a deqerror $end
$var reg 1 b enqerror $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xb
xa
1`
0_
b10101010 ^
b10101010 ]
b10101010 \
0[
1Z
0Y
0X
bx W
0V
b0 U
b0 T
0S
b0 R
0Q
b0 P
1O
b0 N
0M
bx L
b10101010 K
0J
1I
b1 H
zG
bz F
bx E
zD
b0 C
xB
xA
x@
x?
x>
bz =
b10101010 <
0;
z:
09
bz 8
x7
b1 6
bz 5
bz 4
z3
x2
01
b0 0
1/
0.
b10101010 -
bz ,
1+
z*
z)
bz (
z'
1&
z%
z$
bz #
bz "
0!
$end
#5000
0b
0a
11
#10000
0?
02
07
0@
0*
0:
0)
03
0'
1!
01
#15000
11
#20000
1>
1A
1B
1%
b100 "
b100 4
1$
01
#25000
x/
b0z P
zV
zS
11
#30000
b0 F
0G
0D
b0 #
b0 5
01
#35000
1/
b0 P
0V
0S
11
#40000
0>
0A
0B
0$
01
#45000
11
#50000
b100 F
1?
12
b100 ,
b100 =
1*
01
#55000
b0 F
0?
02
0*
b10000000000 C
b100 T
11
#60000
b10000000000 0
b10000000000 N
b10000000000 P
0%
b0 "
b0 4
1$
01
#65000
11
#70000
01
#75000
11
#80000
17
1@
b10 E
b10 L
b10 W
b10 (
b10 8
13
1'
01
#85000
07
0@
03
0'
b10000010000000001 0
b10000010000000001 N
b10000010000000001 P
b100 E
b100 L
b100 W
b10 U
b10 6
b10 H
b1 R
b10000010000000001 C
1Q
11
#90000
17
1@
b11 E
b11 L
b11 W
b1 (
b1 8
13
1'
01
#95000
07
0@
03
0'
b10000010000000010 0
b10000010000000010 N
b10000010000000010 P
b100 E
b100 L
b100 W
b11 U
b11 6
b11 H
b10000010000000010 C
b10 R
11
#100000
17
1@
b11010 E
b11010 L
b11010 W
b10111 (
b10111 8
13
1'
01
#105000
03
0'
1Z
0Y
b10000010000000011 0
b10000010000000011 N
0@
07
0;
b10000010000000011 P
b110001 E
b110001 L
b110001 W
b11010 U
0O
1M
b100 6
b100 H
b10000010000000011 C
b11 R
11
#110000
0Z
1Y
1;
b110010 E
b110010 L
b110010 W
b11000 (
b11000 8
13
1'
01
#115000
0;
1:
1)
03
0'
1Z
0Y
b10000000011 0
b10000000011 N
0[
b10000000011 P
b110010 -
b110010 <
b110010 K
b110010 \
b110010 ]
1.
1J
1_
b10000000011 C
0Q
11
#120000
01
#125000
0.
0J
0_
11
#130000
0:
0)
01
#135000
11
#140000
1>
1A
1B
b0 0
b0 N
b0 P
1%
b100 "
b100 4
01
#145000
11
#150000
01
#155000
11
#160000
0>
0A
0B
0$
01
#165000
11
#170000
b101 F
1?
12
b101 ,
b101 =
1*
01
#175000
b0 F
0?
02
0*
1O
0M
b10100000011 C
b101 T
11
#180000
b10100000011 0
b10100000011 N
b10100000011 P
0%
b0 "
b0 4
1$
01
#185000
11
#190000
01
#195000
11
#200000
17
1@
b101010 E
b101010 L
b101010 W
b10000 (
b10000 8
13
1'
01
#205000
03
0'
1Z
0Y
b10000010100000100 0
b10000010100000100 N
0@
07
0;
b10000010100000100 P
b111010 E
b111010 L
b111010 W
b101010 U
0O
1M
b101 6
b101 H
b100 R
b10000010100000100 C
1Q
11
#210000
0Z
1Y
1;
b110011 E
b110011 L
b110011 W
b1001 (
b1001 8
13
1'
01
#215000
0;
1:
1)
03
0'
1Z
0Y
b10100000100 0
b10100000100 N
0[
b10100000100 P
b110011 -
b110011 <
b110011 K
b110011 \
b110011 ]
1.
1J
1_
b10100000100 C
0Q
11
#220000
1Y
0Z
1[
1;
b110100 E
b110100 L
b110100 W
b1010 (
b1010 8
13
1'
01
#225000
0Y
1Z
0[
0;
03
0'
b110100 ^
b110100 -
b110100 <
b110100 K
b110100 \
b110100 ]
11
#230000
1Y
0Z
1[
1;
b1000010 E
b1000010 L
b1000010 W
b11000 (
b11000 8
13
1'
01
#235000
0Y
1Z
0[
0;
03
0'
b1000010 ^
b1000010 -
b1000010 <
b1000010 K
b1000010 \
b1000010 ]
11
#240000
1Y
0Z
1[
1;
b110101 E
b110101 L
b110101 W
b1011 (
b1011 8
13
1'
01
#245000
0Y
1Z
0[
0;
03
0'
b110101 ^
b110101 -
b110101 <
b110101 K
b110101 \
b110101 ]
11
#250000
01
#255000
0.
0J
0_
11
#260000
01
#260001
